error: too many arguments to function on line 28. everyone please check if this has any solution.



#include <iostream>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#include<math.h>
#include <stdlib.h>



void myInit(){
glEnable(GL_DEPTH_TEST);
gluOrtho2D(0,750,0,600);
glEnable(GL_LIGHTING);
glEnable(GL_LIGHT0);
glEnable(GL_COLOR_MATERIAL);
}

void handleResize(int w, int h){
glViewport(0, 0, w, h);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluPerspective(45.0, (double)w / (double)h, 1.0, 200,0)

}


float sun_move = 0.0f;
float cloud_move= 0.0f;
float cloud_move1= 0.0f;
float cloud_move2= 0.0f;


bool start1 = false;
bool start2 = false;
bool start3 = false;



void circle(float x. float y, double r){
float x1,y1;
glBegin(GL_POLYGON);
for(int i=0;i<200;i++){
    float pi=3.1416;
    float A=(i*2*pi)/25;
    float x1= x+((r-.07)*cos(A) );
    float y1= y+((r)*sin(A) );
    glVertex2f(x1,y1);

}
glEnd();
}




void drawcircle(float x. float y, double r){
float x1,y1;
glBegin(GL_POLYGON);
for(int i=0;i<200;i++){
    float pi=3.1416;
    float A=(i*2*pi)/25;
    float x1= x+((r-.09)*cos(A) );
    float y1= y+((r)*sin(A) );
    glVertex2f(x1,y1);

}
glEnd();
}





void drawCircle(float x. float y, double r){
float x1,y1;
glBegin(GL_POLYGON);
for(int i=0;i<200;i++){
    float pi=3.1416;
    float A=(i*2*pi)/25;
    float x1= x+((r-.03)*cos(A) );
    float y1= y+((r)*sin(A) );
    glVertex2f(x1,y1);

}
glEnd();
}


void sky(){

glColor3f(0.118, 0.565, 1.000);
glBegin(GL_QUADS);
glVertex2f(-1.0,0.2);
glVertex2f(-1.0,1.0);
glVertex2f(1.0,1.0);
glVertex2f(1.0,0.2);
glEnd();

}



void Sun(){

glColor3f(1.000, 0.943, 0.000);
circle(-0.25, 0.75, 0.18);
}


void Cloud1(){
glColor3f(0.80,0.80,0.80);
circle(-0.85,0.77,0.15);
circle(-0.79,0.70,0.15);
circle(-0.70,0.70,0.15);
circle(-0.75,0.77,0.15);
}




void Cloud2(){
glColor3f(0.80,0.80,0.80);
drawcircle(0.35,0.77,0.15);
circle(0.45,0.70,0.15);
drawcircle(0.55,0.75,0.15);
circle(0.45,0.80,0.15);
}




void Cloud3(){
glColor3f(0.80,0.80,0.80);
circle(-0.07,0.85,0.15);
circle(-0.01,0.80,0.15);
circle(-0.08,0.83,0.15);
circle(-0.02,0.85,0.15);
}


void Display(){
glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
glColor3d(1,0,0);
glLoadIdentity();
glMatrixMode(GL_MODELVIEW);
}


glPushMatrix();
glTranslatef(cloud_move,0.0,0.0);
cloud1();
glPopMatrix();

glPushMatrix();
glTranslatef(cloud_move1,0.0,0.0);
cloud2();
glPopMatrix();

glPushMatrix();
glTranslatef(cloud_move2,0.0,0.0);
cloud3();
glPopMatrix();



cloud_move += .003;
{
    if(cloud_move > 1.9)
    {
        cloud_move = -1.0;
    }
}



cloud_move1 += .003;
{
    if(cloud_move1 > 1.0)
    {
        cloud_move1 = -1.7;
    }
}



cloud_move2 += .003;
{
    if(cloud_move2 > 1.5)
    {
        cloud_move2 = -1.2;
    }
}



void update(int value){
glutPostRedisplay();
glutTimerFunc(25,update,0);
}


int main (int argc, char** argv){

glutInit(&argc,argv);
glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
glutInitWindowSize(750,600);

glutCreateWindow("Magical City");
myInit();

glutDisplayFunc(Display);
glutReshapeFunc(handleResize);

glutTimerFunc(25,update,0);
glutMainLoop();
return 0;
}






